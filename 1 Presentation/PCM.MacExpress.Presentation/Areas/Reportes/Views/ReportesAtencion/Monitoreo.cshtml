@model PCM.MacExpress.Presentation.Core.ViewModel.modelReporte

@{
    ViewBag.Titulo = "Reporte de Atenciones por Sede";
    //Layout = "~/Views/Shared/_LayoutPrincipal.cshtml";
    Layout = "~/Views/Shared/_LayoutPrincipalAtencion.cshtml";
}
<div class="card admin-panel">
    <div style="margin-top: 0px; margin-bottom: 5px;">
        <div class="form-horizontal">
            <div class="form-group" style="padding: 0px; margin: 0px;">
                <div class="col-md-12 px-0">
                    <h1 class="titulo-admin-panel" style="margin-bottom: 5px;">Monitoreo</h1>
                </div>
            </div>
        </div>
    </div>

    <form id="formServicioAtencion" action="@Url.Action("Index", "ReporteAtencion", new {area = "Reporte"})" method="post">
        <div class="panel panel-default" style="margin-bottom: 10px;">
            <div class="panel-heading">
                <span> Ingrese parámetros de búsqueda</span>
                @*<a data-toggle="collapse" href="#collapseDatosServicios">
                        <span class="indicador glyphicon glyphicon-chevron-up" aria-hidden="true"></span>
                    </a>*@
            </div>

            <div class="panel-body">
                <div id="collapseDatosServicios">
                    <div class="form-horizontals">
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.ID_ENTIDAD, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.ID_ENTIDAD, ViewBag.LST_ENTIDAD_REPORTE as SelectList, "Todos", new { @class = "form-control" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.ID_SEDE, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.ID_SEDE, ViewBag.LST_SEDE_REPORTE as SelectList, "Todos", new { @class = "form-control" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.ID_USUARIO, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.ID_USUARIO, ViewBag.LST_USUARIO_REPORTE as SelectList, "Todos", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-8">
                                @Html.LabelFor(m => m.ID_SERVICIO, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.ID_SERVICIO, ViewBag.LST_SERVICIO_REPORTE as SelectList, "Todos", new { @class = "form-control" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.DNI, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.DNI, new { @class = "form-control input-sm", maxlength = 8 })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.FECHA_INICIO, new { @class = "control-label" })
                            <div class='input-group'>
                                @Html.TextBoxFor(m => m.FECHA_INICIO, new { @class = "form-control input-sm", maxlength = 10 })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.FECHA_FIN, new { @class = "control-label" })
                                <div class='input-group'>
                                    @Html.TextBoxFor(m => m.FECHA_FIN, new { @class = "form-control input-sm", maxlength = 10 })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="form-horizontal">
                    <div class="col-md-12 text-center">
                        <button id="btnBuscarReporte" type="button" class="btn btn-sucess"><span class="glyphicon glyphicon-search"></span> Buscar</button>
                        <button id="btnExportarReporte" type="button" class="btn btn-gris"><span class="glyphicon glyphicon-export"></span> Exportar Excel</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
 
            <div class="panel-body">
                <div class="row">
                    <div class="col-12 m-0 p-0">
                        &nbsp; &nbsp; Atenciones: <b><span id="NroAtenciones"></span></b><br/><br />

                    </div>
                </div>
                    <div class="col-md-12 m-0 p-0">

                        <div class="card shadow-bg p-3">
                            <h2 class="titulo-estadistico">Atenciones por Centro de Atención</h2>
                            <div id="divAtencionesxCentroAtencion"> <canvas id="myChart1" width="400" height="95"></canvas></div>
                        </div>
                        <div class="card shadow-bg p-3">
                            <h2 class="titulo-estadistico">Atenciones por día</h2>
                            <div id="divAtencionesxDia"> <canvas id="myChart1" width="400" height="95"></canvas></div>
                        </div>
                        <div class="card shadow-bg p-3">
                            <h2 class="titulo-estadistico">Atenciones por Entidad</h2>
                            <div id="divAtencionesxEntidad"> <canvas id="myChart1" width="400" height="95"></canvas></div>
                        </div>

                        @*<div class="card shadow-bg p-3">
                            <h2 class="titulo-estadistico">Tipo de Atención</h2>
                            <canvas id="myChart2" width="400" height="95"></canvas>
                        </div>*@
                    </div>
                </div>
        </div>
    </form>
</div>

<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />

<link href="~/Scripts/Table/bootstrap-table.min.css" rel="stylesheet" />

<script src="~/Scripts/jquery.maskedinput.min.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>

<script src="~/Scripts/Table/bootstrap-table.min.js"></script>
<script src="~/Scripts/Table/bootstrap-table-reorder-columns.min.js"></script>

<script>

    $(document).ready(function () {
        
    $('#btnMenu-Reportes').removeClass('nav-link');    
    $('#btnMenu-Reportes').addClass('activo');

        $("#gvReporte").bootstrapTable({
            cache: false,
            search: false,
            pagination: false
        }).bootstrapTable('resetView');

        $('#DNI').filter_input_solonumeros();
    });

    $('#btnExportarReporte').click(function () {
        $('#formServicioAtencion').submit();
    });

    $('#btnBuscarReporte').click(function () {
        Obtener_Atencion(5);
        Obtener_Atencion(2);
        Obtener_Atencion(3);
        Obtener_Atencion(4);
    });

    function Obtener_Atencion(g) {
        var OBJ = new Object;
        OBJ.ID_ENTIDAD = fnGetTexto($('#ID_ENTIDAD').val());
        OBJ.ID_SEDE = fnGetTexto($('#ID_SEDE').val());
        OBJ.ID_USUARIO = fnGetTexto($('#ID_USUARIO').val());
        OBJ.DNI = $('#DNI').val();
        OBJ.ID_SERVICIO = fnGetTexto($('#ID_SERVICIO').val());
        OBJ.FECHA_INICIO = $('#FECHA_INICIO').val();
        OBJ.FECHA_FIN = $('#FECHA_FIN').val();
        OBJ.PAGINADO = 1;
        OBJ.TIPO = g;

        $.ajax({
            type: "POST",
            url: '/Reportes/ReportesAtencion/ListarMonAtenciones',
            data: { models: OBJ },
            dataType: "json",
            success: function (data) {
                if (data != null)
                    if (data != undefined) {
                        if (g == 5) { $('#NroAtenciones').html(data[0].TOTAL); }
                        if (g == 2) { fnCargar_Atencion(data); }
                        if (g == 3) { fnCargar_AtencionEntidad(data); }
                        if (g == 4) {fnCargar_CentroAtencion(data);}
                       // fnPaginacion_Atencion(data);
                    }
            }
        });
    }

    function fnCargar_Atencion(data) {
        
        //$("#divCantidadRegistrosAtencion")[0].innerText = "Se encontraron (0) registros";
        //$("#gvReporte").bootstrapTable('load', data);
        //Lista de Atenciones por Día
        $('#divAtencionesxDia').html("");
        $('#divAtencionesxDia').append(" <canvas id='chartDia' width='400' height='95'></canvas></div>");


        var labels=[];
        var values=[];
        for (var i = 0; i < data.length; i++) {
                labels.push(data[i].FECHA);
                values.push(data[i].TOTAL);       
        }

        console.log('labels:' + labels);
        console.log('values:' + values);

        
        var ctx = document.getElementById('chartDia').getContext('2d');
        ctx.clearRect(0, 0, 0, 0);
            var myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'N° de Atenciones',
                        data: values,                 
					  backgroundColor: [
                            'rgba(76, 43, 145, 0.2)',
                            'rgba(140, 140, 140, 0.6)',
                            'rgba(171, 164, 164, 0.4)',

                            'rgba(76, 43, 145, 0.4)',
                            'rgba(140, 140, 140, 0.6)',
                            'rgba(140, 140, 140, 0.5)',

                            'rgba(140, 140, 140, 0.5)',
                            'rgba(140, 140, 140, 0.5)',
                            'rgba(140, 140, 140, 0.5)'
                        ],
						borderColor: '#000',						
						label: 'Atenciones',				
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    },
                    animation: {
                        duration: 0, onComplete: function () {
                            ctx = this.chart.ctx; ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, 'normal', Chart.defaults.global.defaultFontFamily);
                            ctx.fillStyle = this.chart.config.options.defaultFontColor; ctx.textAlign = 'center'; ctx.textBaseline = 'bottom';
                            this.data.datasets.forEach(function (dataset) {
                                for (var i = 0; i < dataset.data.length; i++) {
                                    var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model; ctx.fillText(dataset.data[i], model.x, model.y - 5);
                                }
                            });
                        }
                    }
                }
            });



        //pie
          //var ctx = document.getElementById('myChart2').getContext('2d');
          //  var myChart = new Chart(ctx, {
          //      type: 'doughnut',
          //      data: {
          //          labels: ['Adulto Mayor', 'Normal', 'Gestante', 'Discapacitado'],
          //          datasets: [{
          //              label: '# of Votes',
          //              data: [12, 19, 3, 5],
          //              backgroundColor: [
          //                  'rgba(0, 135, 219, 0.2)',
          //                  'rgba(100, 216, 166, 0.2)',
          //                  'rgba(229, 87, 87, 0.2)',
          //                  'rgba(164, 148, 199, 0.4)'

          //              ],
          //              borderColor: [
          //                  'rgba(0, 135, 219, 0.4)',
          //                  'rgba(100, 216, 166, 0.4)',
          //                  'rgba(229, 87, 87, 0.4)',
          //                  'rgba(164, 148, 199, 0.6)'
          //              ],
          //              borderWidth: 1
          //          }]
          //      },
          //      options: {
          //          scales: {
          //              yAxes: [{
          //                  ticks: {
          //                      beginAtZero: true
          //                  }
          //              }]
          //          }
          //      }
          //  });


    }

    function fnCargar_AtencionEntidad(data) {
        
        //$("#divCantidadRegistrosAtencion")[0].innerText = "Se encontraron (0) registros";
        //$("#gvReporte").bootstrapTable('load', data);
        //Lista de Atenciones por Día
        $('#divAtencionesxEntidad').html("");
        $('#divAtencionesxEntidad').append(" <canvas id='chartEntidad' width='400' height='95'></canvas></div>");


        var labels=[];
        var values=[];
        for (var i = 0; i < data.length; i++) {
                labels.push(data[i].MUNICIPALIDAD);
                values.push(data[i].TOTAL);       
        }

        console.log('labels:' + labels);
        console.log('values:' + values);

        
        var ctx = document.getElementById('chartEntidad').getContext('2d');
        ctx.clearRect(0, 0, 0, 0);
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'N° de Atenciones',
                        data: values,
                        backgroundColor: [
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)',
                            'rgba(0, 135, 219, 0.2)'
                        ],
                        borderColor: [
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)',
                            'rgba(0, 115, 186, 0.4)'

                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    },
                    animation: {
                        duration: 0, onComplete: function () {
                            ctx = this.chart.ctx; ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, 'normal', Chart.defaults.global.defaultFontFamily);
                            ctx.fillStyle = this.chart.config.options.defaultFontColor; ctx.textAlign = 'center'; ctx.textBaseline = 'bottom';
                            this.data.datasets.forEach(function (dataset) {
                                for (var i = 0; i < dataset.data.length; i++) {
                                    var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model; ctx.fillText(dataset.data[i], model.x, model.y - 5);
                                }
                            });
                        }
                    }
                }
            });
  




    }

    function fnCargar_CentroAtencion(data) {
        
        //$("#divCantidadRegistrosAtencion")[0].innerText = "Se encontraron (0) registros";
        //$("#gvReporte").bootstrapTable('load', data);
        //Lista de Atenciones por Día
        $('#divAtencionesxCentroAtencion').html("");
        $('#divAtencionesxCentroAtencion').append(" <canvas id='chartCentroAtencion' width='400' height='95'></canvas></div>");


        var labels=[];
        var values=[];
        for (var i = 0; i < data.length; i++) {
                labels.push(data[i].MUNICIPALIDAD);
                values.push(data[i].TOTAL);       
        }

        console.log('labels:' + labels);
        console.log('values:' + values);

        
        var ctx = document.getElementById('chartCentroAtencion').getContext('2d');
        ctx.clearRect(0, 0, 0, 0);
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'N° de Atenciones',
                        data: values,
                        backgroundColor: [
                            'rgba(199, 237, 255, 0.3)',
                            'rgba(181, 235, 215, 0.3)',
                            'rgba(255, 191, 71, 0.2)',
                        ],
                        borderColor: [
                            'rgba(49, 132, 180, 0.4)',
                            'rgba(49, 180, 132, 0.4)',
                            'rgba(255, 191, 71, 0.6)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    },
                    animation: {
                        duration: 0, onComplete: function () {
                            ctx = this.chart.ctx; ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, 'normal', Chart.defaults.global.defaultFontFamily);
                            ctx.fillStyle = this.chart.config.options.defaultFontColor; ctx.textAlign = 'center'; ctx.textBaseline = 'bottom';
                            this.data.datasets.forEach(function (dataset) {
                                for (var i = 0; i < dataset.data.length; i++) {
                                    var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model; ctx.fillText(dataset.data[i], model.x, model.y - 5);
                                }
                            });
                        }
                    }
                }
            });
  




    }


    //function fnPaginacion_Atencion(data) {
    //    if (data.length > 0) {
    //        var total_ = data[0].TOTAL;
    //        var paginado_ = data[0].PAGINADO;
    //        var _pagina = 0;
    //        var i = 1;
    //        while (_pagina < total_) {
    //            _pagina = _pagina + paginado_;
    //            i++;
    //        }

    //        var script_ = '<div id="divPaginadoAtencion" class="text-center" > ';
    //        script_ += '<ul class="pagination pagination-sm pager" id ="myPagerAtencion" > ';
    //        script_ += '<li><a href="#" class="prev_link" onclick ="Obtener_Atencion(1);" >«</a></li>';
    //        for (var i_ = 1; i_ < i; i_++) {
    //            script_ += '<li><a href="#" class="page_link active" onclick ="Obtener_Atencion(' + i_ + ');" > ' + i_ + '</a></li>';
    //        }
    //        script_ += '		<li><a href="#" class="next_link" onclick ="Obtener_Atencion(' + (i - 1) + ');" >»</a></li></ul></div>';
    //        $("#rowPaginadoAtencion").empty().append(script_);
    //        $("#divCantidadRegistrosAtencion")[0].innerText = "Se encontraron (" + total_ + ") registros";
    //    }
    //}

    $('#FECHA_INICIO, #FECHA_FIN').mask("99/99/9999").datetimepicker({
        format: 'DD/MM/YYYY'
    });

    $('#ID_ENTIDAD').change(function () {
        $("#ID_SEDE").empty().append("<option value='0'>Todos</option>");
        var OBJ = new Object;
        OBJ.ID_ENTIDAD = fnGetTexto($('#ID_ENTIDAD').val());

        $.ajax({
            type: "POST",
            url: '/Reportes/ReportesAtencion/ListarEntidad',
            data: { models: OBJ },
            dataType: "json",
            success: function (data) {
                if (data != null)
                    if (data != undefined)
                        fnCargarSede(data);
            }
        });
    });

    $('#ID_SEDE').change(function () {
        $('#ID_USUARIO').empty().append("<option value='0'>Todos</option>");

        var OBJ = new Object;
        OBJ.ID_ENTIDAD = fnGetTexto($('#ID_ENTIDAD').val());
        OBJ.ID_SEDE = fnGetTexto($('#ID_SEDE').val());

        $.ajax({
            type: "POST",
            url: '/Reportes/ReportesAtencion/ListarUsuario',
            data: { models: OBJ },
            dataType: "json",
            success: function (data) {
                if (data != null)
                    if (data != undefined)
                        fnCargarUsuario(data);
            }
        });
    });

    function fnCargarUsuario(data) {
        $('#ID_USUARIO').empty().append("<option value='0'>Todos</option>");

        for (var i = 0; i < data.length; i++) {
            if (data[i].Text != "Todos") {
                $("#ID_USUARIO").append("<option value='" + data[i].ID_USUARIO + "'>" + data[i].NOMBRE + ' ' + data[i].APELLIDO_PATERNO + ' ' + data[i].APELLIDO_MATERNO + "</option>");
            }
        }
    }

    function fnCargarSede(data) {
        $("#ID_SEDE").empty().append("<option value='0'>Todos</option>");

        for (var i = 0; i < data.length; i++) {
            if (data[i].Text != "Todos") {
                $("#ID_SEDE").append("<option value='" + data[i].ID_SEDE + "'>" + data[i].NOMBRE + "</option>");
            }
        }
    }

    function fnGetTexto(campo) {
        if (campo == undefined) {
            return "0";
        } else if (campo == "") {
            return "0";
        } else return campo;
    }

</script>

<style>

    body {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        font-size: 14px;
        line-height: 1.42857143;
        color: #333333;
        background-color: #fff;
    }

    .panel-heading {
        color: #333 !important;
        background-color: #E3E6E8 !important;
        font-weight: bold;
    }

    .control-label {
        color: #555;
        font-size: 14px;
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        padding: 7px 0px 0px 0px;
    }

    .input .form-control, select.form-control {
        color: #444;
        font-size: 12px;
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        padding: 6px 12px 6px 12px;
    }

    /*select.form-control:not([size]):not([multiple]) {
        height: calc(2.25rem + 10px);
    }*/

    div.th-inner {
        color: #333333;
        font-size: 11.9px;
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        padding: 8px;
    }

    .table td, .table th {
        padding: .4rem !important;
        font-size: 0.8rem !important;
    }

    span.input-group-addon {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        font-size: 12px;
        background: #FFF;
        width: auto !important;
        line-height: 1.9;
    }

</style>